prime factor.sh

#!/bin/bash 
 
 
 # Extend the Prime Factorization Program to store all the Prime Factors of a number n into an array and finally display the output. 
 
 
 echo "Enter an integer:" 
 read input 
 
 
 if [ $input -lt 1 ] 
 then 
 	echo "Not valid" 
 	exit 1 
 fi 
 
 
 count=0 
 flag=0 
 array=() 
 
 
 echo "Prime factors of $input are: " 
 for (( i=2; i<$input; i++ )) 
 do 
 	if [ $(( input % i )) -eq 0 ] 
 	then 
 		factor=$i 
 
 
 		for (( j=2; j<=`expr $factor / 2`; j++ )) 
 		do 
 			flag=0 
 			if [ `expr $factor % $j` -eq 0 ] 
 			then 
 				flag=1 
 				break 
 			fi 
 		done 
 		 
 		if [ $flag -eq 0 ] 
 		then 
 			echo "$factor" 
 			array+=($factor) 
 			count=1 
 		fi 
 	fi 
 done 
 
 
 echo ${array[@]} 
 if [ $count -eq 0 ] 
 then 
 	echo "no prime factors found" 
 fi 


#rep_twice_digit.sh
#!/bin/bash 
 
 
 #Take a range from 0 â€“ 100, find the digits that are repeated twice like 33, 77, etc and store them in an array 
 
 
 array=() 
 for i in `seq 0 100` 
 do 
 	if [ $((i%11)) -eq 0 ] 
 	then 
 		array+=($i) 
 	fi 
 done 
 echo "${array[@]}" 



#sort_array.sh
#!/bin/bash 
 
 
 # Extend the above program to sort the array and then find the 2nd largest and the 2nd smallest element. 
 
 
 array=() 
 for (( i=0; i<10; i++ )) 
 do 
 	a=$(( ( RANDOM % 899) + 100 )) 
 	array[((i))]+=$a 
 done 
 echo "${array[@]} is array"  
 
 
 arrays=(`echo ${array[@]} | tr " " "\n" | sort -n`) 
 
 
 echo ${arrays[@]} 
 
 
 echo "${arrays[1]} is max and ${arrays[-2]} is min" 


#store_array.sh
#!/bin/bash 
 
 
 # Write a program in the following steps 
 # a. Generates 10 Random 3 Digit number. 
 # b. Store this random numbers into a array. 
 # c. Then find the 2nd largest and the 2nd smallest element without sorting the array. 
 
 
 array=() 
 for (( i=0; i<10; i++ )) 
 do 
 	a=$(( ( RANDOM % 899) + 100 )) 
 	array[((i))]+=$a 
 done 
 echo "${array[@]} is array"  
 
 
 max_value=${array[0]} 
 min_value=${array[0]} 
 sec_max='unset' 
 sec_min='unset' 
 for i in "${array[@]}" 
 do 
 	if [ $i -gt $max_value ] 
 	then 
 		sec_max=$max_value 
 		max_value=$i 
 	fi 
 	if [ $i -le $min_value ] 
 	then 
 		sec_min=$min_value 
 		min_value=$i 
 	fi 
 done 
 echo "$sec_max is max and $sec_min is min" 



#sum_to_zero.sh
 #!/bin/bash 
 
 
 #Write a Program to show Sum of three Integer adds to ZERO 
 
 
 array=(1 2 -3 -11 5 6) 
 for (( i=0; i<`expr ${#array[@]}-2`; i++ )) 
 do 
 	for (( j=i+1; j<`expr ${#array[@]}-1`; j++ )) 
 	do 
 		for (( k=i+2; k<${#array[@]}; k++ )) 
		do 
 			if [ `expr ${array[i]} + ${array[j]} + ${array[k]}` -eq 0 ] 
 			then 
 				echo "${array[i]} ${array[j]} ${array[k]}" 
 			fi 
 		done 
 	done 
 done 
